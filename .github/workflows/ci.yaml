name: CI

on:
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:
    name: Build, lint, and test on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: "ubuntu-22.04"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get node version
        run: |
          echo "PROJECT_NODE_VERSION=$(cat $GITHUB_WORKSPACE/.nvmrc)" >> $GITHUB_ENV

      - name: Get pnpm version
        run: |
          echo "PROJECT_PNPM_VERSION=$(cat package.json | jq -r .packageManager | awk -F"@" '{ print $NF; }')" >> $GITHUB_ENV
      - name: Setup Node.js version ${{ env.PROJECT_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.PROJECT_NODE_VERSION }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ env.PROJECT_PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install pkgs
        run: pnpm install

      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Lint
        run: pnpm run lint --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}"

      - name: Typecheck
        run: pnpm run typecheck --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}"
